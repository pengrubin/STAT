xlab="Gear Transmission Type" , #add the xlab title
ylab="Miles Per Gallon", #add the ylab title
main="MPG by Gear Transmission Type", #add the main title
names=c("Automatic","Manual")) #change xlab value to character
t.test(mpg~tr, data=logdata)# the t-test above MPG is related to TR.
plot(rawdata,main="Plot Between all Variables") #overlook
best_model<-step(logdata_model, direction="both")
#SN:17052480
#question_1_a
rawdata <- read.table("cars.dat", #input data
header=TRUE) #the first line as the names of the variables
#question_1_b
summary(rawdata)
table(rawdata$tr)
plot(rawdata,main="Plot Between all Variables") #overlook
pairs(rawdata[,2:4], # plot hp, wt, mpg
main = "Plot Between all Variables -- 3 species", #add the main title
pch = c(21,24)[unclass(rawdata$tr)+1], #different tr shows different shape
bg = c("red", "green3")[unclass(rawdata$tr)+1]) #different tr shows different colour
logdata <- cbind(rawdata[,1],log(rawdata[,c(2,3,4)])) #log the data
names(logdata) <- c("tr","hp","wt","mpg")#rename the names of the variables
plot(logdata,main="Plot Between log Variables") #overlook
pairs(logdata[,2:4], # plot log(hp), log(wt), log(mpg)
main = "Plot Between log Variables -- 3 species", #add the main title
pch = c(21,24)[unclass(logdata$tr)+1], #different tr shows different shape
bg = c("red", "green3")[unclass(logdata$tr)+1]) #different tr shows different colour
boxplot(mpg~tr, #MPG by TR
data=rawdata, #set the dataset
xlab="Gear Transmission Type" , #add the xlab title
ylab="Miles Per Gallon", #add the ylab title
main="MPG by Gear Transmission Type", #add the main title
names=c("Automatic","Manual")) #change xlab value to character
t.test(mpg~tr, data=logdata)# the t-test above MPG is related to TR.
#question_1_c
model<-lm(mpg~tr+hp+wt, data=logdata); # i.e, full without qsec and gears
summary(model)
summary(model$residuals)
par(mfrow=c(2,2)) #put 4 graphes together
plot(model) #plot 4 graphes as following.
#addition: if you run the last line code directly, there will be an error "figure margins too large".
#there two way to fix it: 1, click "clear all plots" and then run it.
#                         2, run >>x11() at first if you are run in Windows computer.
#BTW: there is no error if i use it in R Markdown
best<-step(model, direction="both")
summary(best)
summary(best$residuals)
par(mfrow=c(2,2)) #put 4 graphes together
plot(best)#there will be the same error as "plot(model)" and above addition is the solvtion.
best$coefficients
best$coefficients[1]
best$effects
best$coefficients[0]
best$coefficients[2]
best$coefficients[1]
best$coefficients[3]
cat("The final model is   MPG = ", best$coefficients[1],"+",best$coefficients[2],"*HP+",best$coefficients[2],"*WT")
#SN:17052480
#question_2_a
rawdata <- read.table("osl.dat", #input data
header=TRUE) #the first line as the names of the variables
#SN:17052480
#question_2_a
rawdata <- read.table("osl.dat", #input data
header=TRUE) #the first line as the names of the variables
View(rawdata)
#question_2_b
par(mfrow=c(2,1))
plot(se~de, data=rawdata)
#question_2_b
par(mfrow=c(2,1))
pairs(se~de, data=rawdata)
plot(rawdata[,c(2,3)])
#question_2_b
par(mfrow=c(2,1))
plot(rawdata[,c(2,3)])
x11()
plot(rawdata[,c(2,3)])
View(rawdata)
plot(rawdata[,c(2,3)])
plot(se,de,data=rawdata)
plot(se,de)
plot(rawdata$se,rawdata$de)
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de)
#question_2_b
par(mfrow=c(2,2))
plot(rawdata$se,rawdata$de)
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de)
plot(rawdata$se,rawdata$de)
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de)
plot(rawdata$se,rawdata$de)
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de)
hist(rawdata$de)
test(3,30,"test")
text(3,30,"test")
text(3,30,"the number of grains is",rawdata$de[1])
text(3,30,rawdata$de[1])
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de)
hist(rawdata$de)
text(3,30,rawdata$de[1])
text(3,30,"the number of grains is",rawdata$de[1])
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de)
hist(rawdata$de)
plot(-1:1, -1:1, type = "n", xlab = "Re", ylab = "Im")
K <- 16; text(exp(1i * 2 * pi * (1:K) / K), col = 2)
plot(-1:1, -1:1, type = "n", xlab = "Re", ylab = "Im")
K <- 16;
text(exp(1i * 2 * pi * (1:K) / K), col = 2)
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de)
hist(rawdata$de)
text(3,30,paste0("the number of grains is",rawdata$de[1]))
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de)
hist(rawdata$de)
text(3,30,paste0("the number of grains is ",rawdata$de[1]))
text(3,40,paste0("the number of grains is ",count(rawdata$de),
"\nthe mean of the equivalent doses is ",mean(rawdata$de),
"\nthe standard deviation of the equivalent doses is ",sd(rawdata$de)))
text(3,40,paste0("the number of grains is ",nrow(rawdata$de),
"\nthe mean of the equivalent doses is ",mean(rawdata$de),
"\nthe standard deviation of the equivalent doses is ",sd(rawdata$de)))
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de)
hist(rawdata$de)
text(3,40,paste0("the number of grains is ",nrow(rawdata$de),
"\nthe mean of the equivalent doses is ",mean(rawdata$de),
"\nthe standard deviation of the equivalent doses is ",sd(rawdata$de)))
nrow(rawdata$de)
rawdata$de
count(rawdata$de)
nrow(1)
nrow(c(1,23,4))
dim(rawdata$de)
dim(rawdata$de)[1]
length(rawdata$de)
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de)
hist(rawdata$de)
text(3,40,paste0("the number of grains is ",length(rawdata$de),
"\nthe mean of the equivalent doses is ",mean(rawdata$de),
"\nthe standard deviation of the equivalent doses is ",sd(rawdata$de)))
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de)
hist(rawdata$de)
text(3,40,paste0("the number of grains is ",length(rawdata$de),
text(3,40,paste0("the number of grains is ",length(rawdata$de),
"\nthe standard deviation of the equivalent doses is ",format(sd(rawdata$de),digits = 3))
length(rawdata$de)()()
text(3,40,paste0("the number of grains is ",length(rawdata$de),
"\nthe mean of the equivalent doses is ",format(mean(rawdata$de),digits = 3),
"\nthe standard deviation of the equivalent doses is ",format(sd(rawdata$de),digits = 3)))
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de)
hist(rawdata$de)
text(3,40,paste0("the number of grains is ",length(rawdata$de),
"\nthe mean of the equivalent doses is ",format(mean(rawdata$de),digits = 4),
"\nthe standard deviation of the equivalent doses is ",format(sd(rawdata$de),digits = 4)))
plot(rawdata$se,rawdata$de
xlab="Gear Transmission Type" , #add the xlab title
ylab="Horsepower", #add the ylab title
main="GP by TR") #add the main title
plot(rawdata$se,rawdata$de
xlab="Gear Transmission Type" , #add the xlab title
ylab="Horsepower", #add the ylab title
main="GP by TR") #add the main title
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de
xlab="Gear Transmission Type" , #add the xlab title
ylab="Horsepower", #add the ylab title
main="GP by TR" )#add the main title
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de
xlab="Gear Transmission Type" , #add the xlab title
ylab="Horsepower", #add the ylab title
main="GP by TR" )#add the main title
#SN:17052480
#question_2_a
rawdata <- read.table("osl.dat", #input data
header=TRUE) #the first line as the names of the variables
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de
xlab="Gear Transmission Type" , #add the xlab title
ylab="Horsepower", #add the ylab title
main="GP by TR" )#add the main title
plot(rawdata$se,rawdata$de,
xlab="Gear Transmission Type" , #add the xlab title
ylab="Horsepower", #add the ylab title
main="GP by TR" )#add the main title
plot(rawdata$se,rawdata$de,
xlab="standard errors" , #add the xlab title
ylab="equivalent dose", #add the ylab title
main="de by se" )#add the main title
plot(rawdata$se,rawdata$de)
plot(rawdata$se,rawdata$de,
xlab="standard errors" , #add the xlab title
ylab="equivalent dose", #add the ylab title
main="de by se" )#add the main title
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$se,rawdata$de,
xlab="Standard Errors" , #add the xlab title
ylab="Equivalent Dose", #add the ylab title
main="Equivalent Dose by Standard Errors" )#add the main title
hist(rawdata$de)
text(3,40,paste0("the number of grains is ",length(rawdata$de),
"\nthe mean of the equivalent doses is ",format(mean(rawdata$de),digits = 4),
"\nthe standard deviation of the equivalent doses is ",format(sd(rawdata$de),digits = 4)))
plot(rawdata$se,rawdata$de)
hist(rawdata$de,
xlab="Standard Errors" , #add the xlab title
ylab="Equivalent Dose", #add the ylab title
main="Equivalent Dose by Standard Errors" )#add the main title
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$de,rawdata$se,
ylab="Standard Errors" , #add the ylab title
xlab="Equivalent Dose", #add the xlab title
main="Standard Errors against Equivalent Dose" )#add the main title
hist(rawdata$de,
xlab="Equivalent Dose" , #add the xlab title
main="Equivalent Dose by Frequent" )#add the main title
text(3,40,paste0("the number of grains is ",length(rawdata$de),
"\nthe mean of the equivalent doses is ",format(mean(rawdata$de),digits = 4),
"\nthe standard deviation of the equivalent doses is ",format(sd(rawdata$de),digits = 4)))
a
a
a
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$de,rawdata$se,
ylab="Standard Errors" , #add the ylab title
xlab="Equivalent Dose", #add the xlab title
main="Standard Errors against Equivalent Dose" )#add the main title
hist(rawdata$de,
xlab="Equivalent Dose" , #add the xlab title
main="Equivalent Dose by Frequency" )#add the main title
text(3,40,paste0("the number of grains is ",length(rawdata$de),
"\nthe mean of the equivalent doses is ",format(mean(rawdata$de),digits = 4),
"\nthe standard deviation of the equivalent doses is ",format(sd(rawdata$de),digits = 4)))
#question_2_c
negll <- function(params,dat) {
temp_K <- ((params - 32) * (5 / 9)) + 273.15
return(temp_K)
}
negll(5)
params <- c(1,2)
head(rawdata)
dat <- rawdata[,c(2,3)]
l <- -0.5*(log(sum(params^2)))
sum(params^2)
dat
dat[,2]
l <- -0.5*sum(log(params[2]^2+dat[,2]^2))
l <- -0.5*sum(log(params[2]^2+dat[,2]^2)+(dat[,1]-params[1])^2/(paras[2]^2+dat[,2]^2))
l <- -0.5*sum(log(params[2]^2+dat[,2]^2)+(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2))
l <- 0.5*sum(log(params[2]^2+dat[,2]^2)+(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2))
View(rawdata)
#question_2_d
params <- c(mean(rawdata[,2]),sd(rawdata[,2])
#question_2_d
params <- c(mean(rawdata[,2]),sd(rawdata[,2]))
#question_2_d
params <- c(mean(rawdata[,2]),sd(rawdata[,2]))
negll(params,dat)
0.5*sum(log(params[2]^2+dat[,2]^2)+(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2))
return(l)
l <- 0.5*sum(log(params[2]^2+dat[,2]^2)+(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2))
c(mean(rawdata[,2]),sd(rawdata[,2]))
#question_2_d
params <- c(mean(rawdata[,2]),sd(rawdata[,2]))
dat <- rawdata[,c(2,3)]
negll(params,dat)
params[2]
params[1]
params
#question_2_c
negll <- function(params,dat) {
l <- 0.5*sum(log(params[2]^2+dat[,2]^2)+(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2))
return(l)
}
#question_2_d
params <- c(mean(rawdata[,2]),sd(rawdata[,2]))
dat <- rawdata[,c(2,3)]
negll(params,dat)
params1 <- c(mean(rawdata[,2]),mean(rawdata[,3]))
l2 <- negll(params2,dat)
params2 <- c(mean(rawdata[,2]),mean(rawdata[,3]))
l2 <- negll(params2,dat)
f <- function(x) sum((x-1:length(x))^2)
nlm(f, c(10,10))
nlm(f, c(10,10), print.level = 2)
utils::str(nlm(f, c(5), hessian = TRUE))
f <- function(x, a) sum((x-a)^2)
nlm(f, c(10,10), a = c(3,5))
out.NB <- nlm(neg.nnominb.loglik, c(4,4))
num.stems <- c(6,8,9,6,6,2,5,3,1,4)
aphids_count <- c(0,1,2,3,4,5,6,7,8,9)
aphids <- data.frame(aphids_count, num.stems)
aphids_raw <- rep(aphids_count, num.stems)
aphids_raw
nnominb.loglik <- function(p) {
res <- sum(log(dnbinom(aphids_raw, mu = p[1], size = p[2])))
return(res)
}
neg.nnominb.loglik <- function(p) {
res <- sum(log(dnbinom(aphids_raw, mu = p[1], size = p[2])))
return(-res)
}
out.NB <- nlm(neg.nnominb.loglik, c(4,4))
out.NB
x <- seq(0.1, 10, by = 0.1)
y_max <- sapply(x, function(x) nnominb.loglik(p = c(out.NB$estimate[1], x)))
plot(y_max ~ x, type = "l", ylab = "Log Likelihood", xlab = "Size")
y_2 <- sapply(x, function(x) nnominb.loglik(p = c(2, x)))
lines(y_2 ~ x, col = 2)
y_5 <- sapply(x, function(x) nnominb.loglik(p = c(5, x)))
lines(y_5 ~ x, col = 3)
nlm(negll)
nlm(negll,c(1,1))
nlm(negll,c(1,1),dat=rawdata[,c(2,3)])
utils::str(nlm(negll,c(1,1),dat=rawdata[,c(2,3)]))
#question_2_e
nlm(-negll,c(1,1),dat=rawdata[,c(2,3)])
#question_2_c
negll <- function(params,dat) {
l <- -0.5*sum(log(params[2]^2+dat[,2]^2)+(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2))
return(l)
}
#question_2_e
nlm(negll,c(1,1),dat=rawdata[,c(2,3)])
utils::str(nlm(negll,c(1,1),dat=rawdata[,c(2,3)]))
l <- 0.5*sum(log(params[2]^2+dat[,2]^2)+(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2))
#question_2_c
negll <- function(params,dat) {
l <- 0.5*sum(log(params[2]^2+dat[,2]^2)+(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2))
return(l)
}
#question_2_e
nlm(negll,c(1,1),dat=rawdata[,c(2,3)])
utils::str(nlm(negll,c(1,1),dat=rawdata[,c(2,3)]))
#question_2_e
est <- nlm(negll,c(1,1),dat=rawdata[,c(2,3)])
utils::str(nlm(negll,c(1,1),dat=rawdata[,c(2,3)]))
demo(est)
#question_2_e
est <- nlm(negll,c(1,1),dat=rawdata[,c(2,3)])
demo(est)
demo(nlm(negll,c(1,1),dat=rawdata[,c(2,3)]))
demo(nlm)
#question_2_c
negll <- function(params,dat) {
l <- -0.5*sum(log(params[2]^2+dat[,2]^2)+(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2))
return(-l)
}
#question_2_e
est <- nlm(negll,c(1,1),dat=rawdata[,c(2,3)])
utils::str(nlm(negll,c(1,1),dat=rawdata[,c(2,3)]))
demo(nlm)
utils::str(nlm(negll,c(1,1),dat=rawdata[,c(2,3)]))
#question_2_e
est <- nlm(negll,c(1,1),dat=rawdata[,c(2,3)])
utils::str(nlm(negll,c(1,1),dat=rawdata[,c(2,3)]))
#question_2_e
est <- nlm(negll,c(1,5),dat=rawdata[,c(2,3)])
utils::str(nlm(negll,c(1,5),dat=rawdata[,c(2,3)]))
#question_2_f
se<-diag(solve(est$hessian))
#question_2_e
est <- nlm(negll,c(1,5),dat=rawdata[,c(2,3)],hessian=T)
utils::str(nlm(negll,c(1,5),dat=rawdata[,c(2,3)]))
#question_2_f
se<-diag(solve(est$hessian))
utils::str(nlm(negll,c(1,5),dat=rawdata[,c(2,3)]),hessian=T)
#question_2_f
se<-diag(solve(est$hessian))
se
cat("the μ and σ standard errors for these estimates are ",se[1]," and ",se[2])
cat("the μ and σ standard errors for these estimates are ",se[1]," and ",se[2])
est$estimate
cat("the estimates of μ and σ are ",est$estimate[1]," and ",est$estimate[2])
rawdata <- read.table("osl.dat", #input data
header=TRUE) #the first line as the names of the variables
par(mfrow=c(2,1))
plot(rawdata$de,rawdata$se,
ylab="Standard Errors" , #add the ylab title
xlab="Equivalent Dose", #add the xlab title
main="Standard Errors against Equivalent Dose" )#add the main title
hist(rawdata$de,
xlab="Equivalent Dose" , #add the xlab title
main="Equivalent Dose by Frequency" )#add the main title
text(3,40,paste0("the number of grains is ",length(rawdata$de),
"\nthe mean of the equivalent doses is ",format(mean(rawdata$de),digits = 4),
"\nthe standard deviation of the equivalent doses is ",format(sd(rawdata$de),digits = 4)))
negll <- function(params,dat) {
l <- -0.5*sum(log(params[2]^2+dat[,2]^2)+
(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2)) #the log-likelihood omitting the constant term
return(-l) #the negative log-likelihood
}
negll <- function(params,dat) {
l <- -0.5*sum(log(params[2]^2+dat[,2]^2)+
(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2)) #the log-likelihood omitting the constant term
return(-l) #the negative log-likelihood
}
dat <- rawdata[,c(2,3)]
params1 <- c(mean(rawdata[,2]),sd(rawdata[,2])) #params1 use the sd(rawdata[,2])
negll(params1,dat)
params2 <- c(mean(rawdata[,2]),mean(rawdata[,3])) #params2 use the mean(rawdata[,3])
negll(params2,dat)
par(mfrow=c(2,1))
plot(rawdata$de,rawdata$se,
ylab="Standard Errors" , #add the ylab title
xlab="Equivalent Dose", #add the xlab title
main="Standard Errors against Equivalent Dose" )#add the main title
hist(rawdata$de,
xlab="Equivalent Dose" , #add the xlab title
main="Equivalent Dose by Frequency" )#add the main title
text(3,40,paste0("the number of grains is ",length(rawdata$de),
"\nthe mean of the equivalent doses is ",
format(mean(rawdata$de),digits = 4),
"\nthe standard deviation of the equivalent doses is ",format(sd(rawdata$de),digits = 4)))
#SN:17052480
#question_2_a
rawdata <- read.table("osl.dat", #input data
header=TRUE) #the first line as the names of the variables
est$estimate[1]
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$de,rawdata$se,
ylab="Standard Errors" , #add the ylab title
xlab="Equivalent Dose", #add the xlab title
main="Standard Errors against Equivalent Dose" )#add the main title
hist(rawdata$de,
xlab="Equivalent Dose" , #add the xlab title
main="Equivalent Dose by Frequency" )#add the main title
text(3,40,paste0("the number of grains is ",length(rawdata$de),
"\nthe mean of the equivalent doses is ",format(mean(rawdata$de),digits = 4),
"\nthe standard deviation of the equivalent doses is ",format(sd(rawdata$de),digits = 4)))
#question_2_c
negll <- function(params,dat) {
l <- -0.5*sum(log(params[2]^2+dat[,2]^2)+
(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2)) #the log-likelihood omitting the constant term
return(-l) #the negative log-likelihood
}
#question_2_d
dat <- rawdata[,c(2,3)]
params1 <- c(mean(rawdata[,2]),sd(rawdata[,2])) #params1 use the sd(rawdata[,2])
cat("the the negative log-likelihood value by params1 is ",negll(params1,dat))
params2 <- c(mean(rawdata[,2]),mean(rawdata[,3])) #params2 use the mean(rawdata[,3])
cat("the the negative log-likelihood value by params2 is ",negll(params2,dat))
#question_2_e
est <- nlm(negll,c(1,5),dat=rawdata[,c(2,3)],hessian=T) #nlm estimation
utils::str(nlm(negll,c(1,5),dat=rawdata[,c(2,3)]),hessian=T) #control the output
cat("the estimates of μ and σ are ",est$estimate[1]," and ",est$estimate[2])
#question_2_f
se<-diag(solve(est$hessian)) #the parameters standard errors for these estimates
cat("the μ and σ standard errors for these estimates are ",se[1]," and ",se[2])
#SN:17052480
#question_2_a
rawdata <- read.table("osl.dat", #input data
header=TRUE) #the first line as the names of the variables
#question_2_b
par(mfrow=c(2,1))
plot(rawdata$de,rawdata$se,
ylab="Standard Errors" , #add the ylab title
xlab="Equivalent Dose", #add the xlab title
main="Standard Errors against Equivalent Dose" )#add the main title
hist(rawdata$de,
xlab="Equivalent Dose" , #add the xlab title
main="Equivalent Dose by Frequency" )#add the main title
text(3,40,paste0("the number of grains is ",length(rawdata$de),
"\nthe mean of the equivalent doses is ",format(mean(rawdata$de),digits = 4),
"\nthe standard deviation of the equivalent doses is ",format(sd(rawdata$de),digits = 4)))
#question_2_c
negll <- function(params,dat) {
l <- -0.5*sum(log(params[2]^2+dat[,2]^2)+
(dat[,1]-params[1])^2/(params[2]^2+dat[,2]^2)) #the log-likelihood omitting the constant term
return(-l) #the negative log-likelihood
}
#question_2_d
dat <- rawdata[,c(2,3)]
params1 <- c(mean(rawdata[,2]),sd(rawdata[,2])) #params1 use the sd(rawdata[,2])
cat("the the negative log-likelihood value by params1 is ",negll(params1,dat))
params2 <- c(mean(rawdata[,2]),mean(rawdata[,3])) #params2 use the mean(rawdata[,3])
cat("the the negative log-likelihood value by params2 is ",negll(params2,dat))
#question_2_e
est <- nlm(negll,c(1,5),dat=rawdata[,c(2,3)],hessian=T) #nlm estimation
utils::str(nlm(negll,c(1,5),dat=rawdata[,c(2,3)]),hessian=T) #control the output
cat("the estimates of μ and σ are ",est$estimate[1]," and ",est$estimate[2])
#question_2_f
se<-diag(solve(est$hessian)) #the parameters standard errors for these estimates
cat("the μ and σ standard errors for these estimates are ",se[1]," and ",se[2])
